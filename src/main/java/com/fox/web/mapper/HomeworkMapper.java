package com.fox.web.mapper;

import com.fox.web.domain.Homework;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface HomeworkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table homework
     *
     * @mbg.generated
     */
    @Delete({
        "delete from homework",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table homework
     *
     * @mbg.generated
     */
    @Insert({
        "insert into homework (id, user_id, ",
        "class_id, lesson_id, ",
        "homework_file_path, homework_file_name, ",
        "create_date, correct_flag, ",
        "star_count, negative_count, ",
        "best_flag)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{classId,jdbcType=INTEGER}, #{lessonId,jdbcType=INTEGER}, ",
        "#{homeworkFilePath,jdbcType=VARCHAR}, #{homeworkFileName,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{correctFlag,jdbcType=TINYINT}, ",
        "#{starCount,jdbcType=INTEGER}, #{negativeCount,jdbcType=INTEGER}, ",
        "#{bestFlag,jdbcType=BIT})"
    })
    int insert(Homework record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table homework
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, user_id, class_id, lesson_id, homework_file_path, homework_file_name, create_date, ",
        "correct_flag, star_count, negative_count, best_flag",
        "from homework",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER),
        @Result(column="lesson_id", property="lessonId", jdbcType=JdbcType.INTEGER),
        @Result(column="homework_file_path", property="homeworkFilePath", jdbcType=JdbcType.VARCHAR),
        @Result(column="homework_file_name", property="homeworkFileName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="correct_flag", property="correctFlag", jdbcType=JdbcType.TINYINT),
        @Result(column="star_count", property="starCount", jdbcType=JdbcType.INTEGER),
        @Result(column="negative_count", property="negativeCount", jdbcType=JdbcType.INTEGER),
        @Result(column="best_flag", property="bestFlag", jdbcType=JdbcType.BIT)
    })
    Homework selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table homework
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, user_id, class_id, lesson_id, homework_file_path, homework_file_name, create_date, ",
        "correct_flag, star_count, negative_count, best_flag",
        "from homework"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER),
        @Result(column="lesson_id", property="lessonId", jdbcType=JdbcType.INTEGER),
        @Result(column="homework_file_path", property="homeworkFilePath", jdbcType=JdbcType.VARCHAR),
        @Result(column="homework_file_name", property="homeworkFileName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="correct_flag", property="correctFlag", jdbcType=JdbcType.TINYINT),
        @Result(column="star_count", property="starCount", jdbcType=JdbcType.INTEGER),
        @Result(column="negative_count", property="negativeCount", jdbcType=JdbcType.INTEGER),
        @Result(column="best_flag", property="bestFlag", jdbcType=JdbcType.BIT)
    })
    List<Homework> selectAll();

    @Select({
            "select",
            "id, user_id, class_id, lesson_id, homework_file_path, homework_file_name, create_date, ",
            "correct_flag, star_count, negative_count, best_flag",
            "from homework",
            "where user_id = #{userId,jdbcType=INTEGER} and class_id = #{classId,jdbcType=INTEGER} and lesson_id = #{lessonId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
            @Result(column="class_id", property="classId", jdbcType=JdbcType.INTEGER),
            @Result(column="lesson_id", property="lessonId", jdbcType=JdbcType.INTEGER),
            @Result(column="homework_file_path", property="homeworkFilePath", jdbcType=JdbcType.VARCHAR),
            @Result(column="homework_file_name", property="homeworkFileName", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="correct_flag", property="correctFlag", jdbcType=JdbcType.TINYINT),
            @Result(column="star_count", property="starCount", jdbcType=JdbcType.INTEGER),
            @Result(column="negative_count", property="negativeCount", jdbcType=JdbcType.INTEGER),
            @Result(column="best_flag", property="bestFlag", jdbcType=JdbcType.BIT)
    })
    List<Homework> selectByUserIdAndClassIdAndLessonId(@Param("userId") Integer userId, @Param("classId") Integer classId, @Param("lessonId") Integer lessonId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table homework
     *
     * @mbg.generated
     */
    @Update({
        "update homework",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "class_id = #{classId,jdbcType=INTEGER},",
          "lesson_id = #{lessonId,jdbcType=INTEGER},",
          "homework_file_path = #{homeworkFilePath,jdbcType=VARCHAR},",
          "homework_file_name = #{homeworkFileName,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "correct_flag = #{correctFlag,jdbcType=TINYINT},",
          "star_count = #{starCount,jdbcType=INTEGER},",
          "negative_count = #{negativeCount,jdbcType=INTEGER},",
          "best_flag = #{bestFlag,jdbcType=BIT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Homework record);
}